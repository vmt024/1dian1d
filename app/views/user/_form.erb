  <fieldset>
    <%= form.label :你的昵称,{:for=>"user_name"} %>
    <% if @user.new_record? %>
      <%= form.text_field :name,:class=>"validate[required,funcCall[validateName],minSize[2],maxSize[6],custom[onlyLetterNumber]]",:onfocus=>"if(this.value == ''){$(this).validationEngine('showPrompt', '昵称在注册成功后是不能随意更改的', 'load','topRight',true)}" %>
    <% else %>
      <%= form.text_field :name,:readonly=>true,:onkeypress=>"$(this).validationEngine('showPrompt', '您注册时使用的昵称是不能随意更改的', 'load','topRight',true)",:onblur=>"$(this).validationEngine('hide');" %>
    <% end %>
  </fieldset>
  <fieldset>
    <%= form.label :你的邮箱, {:for=>"user_email"} %>
    <% if @user.new_record? %>
      <%= form.text_field :email,:class=>"validate[required,funcCall[validateUserEmail],custom[email]]",:onfocus=>"if(this.value == ''){$(this).validationEngine('showPrompt', '邮箱地址在注册成功后是不能随意更改的', 'load','topRight',true)}" %>
    <% else %>
      <%= form.text_field :email,:readonly=>true, :onkeypress=>"$(this).validationEngine('showPrompt', '您注册时使用的邮箱地址是不能随意更改的', 'load','topRight',true);", :onblur=>"$(this).validationEngine('hide');" %>
    <% end %>
  </fieldset>
  <fieldset>
    <%= form.label :自我介绍, {:for=>"user_description"} %>
    <%= form.text_area :description,:class=>"" %>
  </fieldset>
  <fieldset>
    <%= form.label :来自哪里, {:for=>"user_location"} %>
    <%= form.select :location, province_list %>
  </fieldset>

  <% if form.object.new_record?%>
    <fieldset>
      <%= form.label :你的密码, {:for=>"user_password"} %>
      <%= form.password_field :password,:class=>"validate[required,minSize[6]]",:value=>'' %>
    </fieldset>
    <fieldset>
      <%= form.label :密码确认,{:for=>"user_password_confirmation"} %>
      <%= form.password_field :password_confirmation,:class=>"validate[required,equals[user_password]]",:value=>'' %>
    </fieldset>
  <% else %>
    <fieldset>
      <%= form.label :更改您的密码,{:for=>"user_password"} %>
      <%= form.password_field :password,:class=>"validate[minSize[6]]",:value=>'' %>
    </fieldset>
  <% end %>

<script>
function validateUserEmail(field, rules, i, options){
  jQuery(function($) {
    email_already_exists = 
      $.ajax({
        url : "user/validate_email",
        data: "email=" + field.val(),
        async: false
      }).responseText;
      email_already_exists = email_already_exists.replace(/^\s+|\s+$/g, '');
  })
  if (email_already_exists == 'true'){
    // this allows the use of i18 for the error msgs
    return options.allrules.validateUserEmail.alertText;
  }
}


function validateName(field, rules, i, options){
  jQuery(function($) { 
      name_already_exists = 
      $.ajax({
        url : "user/validate_name",
        data: "name=" + field.val(),
        async:false
      }).responseText;
      name_already_exists = name_already_exists.replace(/^\s+|\s+$/g, '');
 })
  if (name_already_exists == 'true'){
    // this allows the use of i18 for the error msgs
    return options.allrules.validateName.alertText;
  }
}
</script>
